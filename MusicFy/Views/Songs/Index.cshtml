﻿@using X.PagedList;
@using X.PagedList.Mvc.Core;
@model IEnumerable<MF.Data.Song.Song>

@{
    ViewData["Title"] = "Index";

    var searchTitle = ViewBag.TitleSearch;
    var searchAlbumId = ViewBag.AlbumIdSearch;

    var queryTitleParams = new Dictionary<string, string>
            {
                { "sortOrder", ViewBag.TitleSortParam },
                { "searchTitle", ViewBag.TitleSearch },
                { "searchAlbumId", ViewBag.AlbumIdSearch }
            };
    var queryReleaseDateParams = new Dictionary<string, string>
            {
                { "sortOrder", ViewBag.ReleaseDateSortParam },
                { "searchTitle", ViewBag.TitleSearch },
                { "searchAlbumId", ViewBag.AlbumIdSearch }
            };
}

<h1>Index</h1>

<form asp-action="Index">
    <div class="row">
        <div class="col-md-2">
            <input asp-for="@searchTitle" class="form-control" placeholder="Search Title"/>
        </div>
        <div class="col-md-2">
            <select asp-for="@searchAlbumId" class="form-control" asp-items="(IEnumerable<SelectListItem>)ViewBag.Albums">
                <option value="">-Select Album-</option>
            </select>
        </div>
        <div class="col-md-2">
            <button class="btn btn-warning"><i class="bi bi-search"></i> Search</button>
        </div>
    </div>
    <div class="col-md-2" style="height: 20px;"></div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                Play
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Author)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Album)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Duration)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Listeners)
            </th>
            <th>
                Banner
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <button class="btn btn-outline-light btn-circle" aria-label="Play">
                        <i class="bi bi-play" alt="Play"></i>
                    </button>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Author.Username)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Album.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Duration)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Listeners)
                </td>
                <td>
                    <img src="/uploads/banners/@item.ImageFileName" class="banner-image border border-warning rounded" alt="Banner" />
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<button onclick="location.href='@Url.Action("Create", "Songs")';" class="btn btn-outline-warning">Create new</button>
<br>
@Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page, searchTitle = ViewBag.TitleSearch, sortOrder = ViewBag.SortOrder }))